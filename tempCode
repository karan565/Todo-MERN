// import { useState } from "react"

// export const Todos = async (todos) => {
//     // const res = await fetch("https://localhost:3000/todos", {
//     //     method: "GET",
//     //     headers: {
//     //         "Content-Type": "application/json"
//     //     }
//     // })
//     // const { todos } = await res.json()
//     return <div>
//         {{
//             todos.map((todo) => {
//                 return <div key={todo.id}>
//                     <h1>{todo.title}</h1>
//                     <h2>{todo.description}</h2>
//                     <button onClick={async () => {
//                         if (todo.completed == true)
//                             alert("Todo already completed")
//                             else {
//                             const res = await fetch("http://localhost:3000/completed", {
//                                 method: "PUT",
//                                 headers: {
//                                     "Content-Type": "application/json"
//                                 },
//                                 body: JSON.stringify({
//                                     id: todo.id
//                                 })
//                             })
//                             const json = await res.json()
//                             if (res.ok)
//                                 alert(`${todo.title} marked as completed`)
//                             else
//                                 alert("error occured")
//                         }
//                     }}>{todo.completed == true ? "Completed" : "Mark as completed"}</button>
//                     <br /><br />
//                 </div>
//             })
//         }}
//     </div>
// }




















// //Loading Component
// import { useState, useEffect } from 'react';

// function MyComponent() {
//     const [data, setData] = useState(null);

//     useEffect(() => {
//         // This effect runs only once, when the component first mounts
//         console.log('Component has mounted!');

//         // Simulate fetching data from an API
//         setTimeout(() => {
//             setData("Data loaded!");
//         }, 2000);

//         // The empty array means this effect runs only on mount (and is cleaned up on unmount)
//     }, []);

//     return <div>{data ? data : "Loading..."}</div>;
// }

// export default MyComponent;